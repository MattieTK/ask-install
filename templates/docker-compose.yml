# DO NOT EDIT FILE, AUTOGENERATED.
#
# Reuse the ask-install after editing the config file and re-run the ask-install
# tool with `-s`:
#
#  ask-install -s
#

version: '2'

##########################
# Services
##########################

services:

  cay:
    image: coralproject/cay:release
    restart: on-failure:10
    environment:
      - "GAID={{ .GoogleAnalyticsID }}"
      - "AUTH_CLIENT_ID=cay"
      - "AUTH_AUTHORITY={{ .RootURL }}/auth/connect"
      - "ELKHORN_URL={{ .RootURL }}/elkhorn"
      - "ASK_URL={{ .RootURL }}/askd"
    networks:
      - back-shelf

  askd:
    image: coralproject/askd:release
    restart: on-failure:10
    environment:
      - "ASK_HOST=0.0.0.0:80"
      - "ASK_LOGGING_LEVEL=1"
      - "ASK_MONGO_URI=mongodb://shelf-mongo/test"
      - "ASK_ENABLE_CORS=TRUE"
      - "ASK_AUTH_PUBLIC_KEY={{ .AuthPublicKey }}"
      - "ASK_RECAPTCHA_SECRET={{ .RecaptchaSecret }}"
    networks:
      - back-shelf
    depends_on:
      - shelf-mongo

  elkhorn:
    image: coralproject/elkhorn:release
    restart: on-failure:10
    environment:
      - "ASK_URL=http://askd"
      - "S3_BUCKET={{ .S3Bucket }}"
      - "AWS_REGION={{ .AWSRegion }}"
      - "AWS_ACCESS_KEY_ID={{ .AWSAccessKeyID }}"
      - "AWS_ACCESS_KEY={{ .AWSAccessKey }}"
      - "RECAPTCHA={{ .RecaptchaSecret }}"
    {{- if not .UseS3 }}
      - "PUBLISHED_BASE_URL={{ .RootURL }}/widgets/"
    volumes:
      - ./elkhorn:/usr/src/app/server/widgets
    {{ end }}
    networks:
      - back-shelf
    depends_on:
      - askd

  auth:
    image: coralproject/coral-auth:release
    restart: on-failure:10
    environment:
      - "CORAL_AUTH_PORT=80"
      - "CORAL_AUTH_TRUST_PROXY=TRUE"
      - "CORAL_AUTH_TOKEN_EXPIRY_TIME=36 hr"
      - "CORAL_AUTH_MONGO_URL=mongodb://auth-mongo/test"
      - "CORAL_AUTH_PRIVATE_KEY={{ .AuthPrivateKey }}"
      - "CORAL_AUTH_PUBLIC_KEY={{ .AuthPublicKey }}"
      - "CORAL_AUTH_SESSION_SECRET={{ .SessionSecret }}"
      - "CORAL_AUTH_ALLOWED_CLIENTS=cay {{ .RootURL }}/callback"
      - "CORAL_AUTH_ROOT_URL={{ .RootURL }}/auth"
    networks:
      - back-auth
    depends_on:
      - auth-mongo

  ##########################
  # Databases
  ##########################

  shelf-mongo:
    image: mongo:3.2
    restart: on-failure:10
    volumes:
      - shelf-mongo:/data/db
    networks:
      - back-shelf

  auth-mongo:
    image: mongo:3.2
    restart: on-failure:10
    volumes:
      - auth-mongo:/data/db
    networks:
      - back-auth

  ##########################
  # Web Servers
  ##########################

  caddy:
    image: abiosoft/caddy:latest
    volumes:
      - ./Caddyfile:/etc/Caddyfile
      {{- if not .UseS3 }}
      - ./elkhorn:/var/www/widgets
      {{ end }}
      - caddy-certs:/root/.caddy
    ports:
      - "0.0.0.0:{{ .Port }}:{{ .Port }}"
      {{- if .UseSSL }}
      - "0.0.0.0:443:443"
      {{ end }}
    networks:
      - bastion
      - back-auth
      - back-shelf
    depends_on:
      - auth
      - askd
      - elkhorn
      - cay

##########################
# Service Networks
##########################

networks:
  bastion:
  back-shelf:
  back-auth:

##########################
# Service Volumes
##########################

volumes:
  caddy-certs:
    external: false
  auth-mongo:
    external: false
  shelf-mongo:
    external: false
